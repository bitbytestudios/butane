server {
  server_name yeti.origamicomet.com;

  listen 80;
  listen [::]:80;

  ssl off;

  # Force encryption. It's the current year, after all.
  return 301 https://$server_name$request_uri;
}

server {
  server_name yeti.origamicomet.com;

  listen 443 ssl;
  listen [::]:443 ssl http2;

  # Don't send the version numbers in headers and error pages.
  server_tokens off;

  # Avoid stripping.
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # Don't allow the browser to render the page inside a frame or iframe to
  # avoid clickjacking.
  add_header X-Frame-Options SAMEORIGIN;

  # Disable browser content-type sniffing.
  add_header X-Content-Type-Options nosniff;

  # Enable cross-site scripting filter in most browsers. Enabled by default
  # but force it on if a user happened to turn it off or something malicious
  # hijacked the browser and did.
  add_header X-XSS-Protection "1; mode=block";

  # Tell the browser it can only download content from our domains
  add_header Content-Security-Policy "default-src 'self';";

  ssl on;
  ssl_certificate /etc/nginx/ssl/origamicomet/public.crt;
  ssl_certificate_key /etc/nginx/ssl/origamicomet/private.key;
  ssl_dhparam /etc/nginx/ssl/origamicomet/dh.pem;
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  root /var/www/yeti;

  try_files $uri.html $uri/ $uri =404;

  # TODO(mtwilliams): Custom error pages.
  # error_page 404 /404.html;
  # error_page 500 502 503 504 /500.html;
}
